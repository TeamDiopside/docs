[[{"l":"Team Diopside Documentation","p":["Welcome to the Team Diopside Docs!"]}],[{"l":"Seamless","p":["Configure your own outlines by creating a simple resource pack for Seamless!"]}],[{"l":"Creating a pack","p":["First create an empty resource pack, or, if you are a mod developer, you can add the folders to your mod's resources.","In the assets folder, create a folder with the name of the mod ID of the mod you are adding support for. In there, add a folder named seamless_rules. If the mod ID doesn't match, it won't work.","For example, such a folder structure could be assets/supplementaries/seamless_rules.","Don't know what the mod ID is? Look at the text before the \":\" when hovering over the item with Advanced Tooltips enabled."]}],[{"l":"Files","p":["Inside of the folder you just created, we are going to add JSON files for different outline rules. These rules define how outlines of different blocks merge if they are next to each other.","An outline rule in its simplest form looks like this:","First we have the blocks list. This is where you put all blocks (or tags) that apply to this rule. Think of this as the block you are looking at.","The connecting_blocks list specifies which blocks (or tags) should be able to connect with the blocks in the blocks list.","The directions list contains all directions in which the rule should work. This can be north, east, south, west, up and down.","The file name can be whatever you want, but it would make sense to describe the rule."]},{"l":"Blockstates","p":["Optionally, you can specify blockstates too:","This means: any block in #doors with a state of upper for the property half, will connect to any block in #doors with a state of lower for the property half.","You can specify more than one state too, for example:","Creating these files can get quite time consuming, so the next page lists some shortcuts you can use."]},{"l":"Recursion","p":["When looking at a block and a match is found, Seamless will check the connecting block for other connecting blocks. This could go on forever! Keep this in mind, as you will often need to create outline rules that are more specific, to keep the outlines from spreading to disconnected blocks."]}],[{"l":"Shortcuts","p":["Sometimes, if there are many blockstates, many files are needed. To avoid having to make tons of almost identical files, there is some handy stuff you can use to make things much easier."]},{"l":"Excluding Blocks","p":["Sometimes, a tag might contain exceptions, so you need to exclude blocks from it. This is done by putting an exclamation mark in front of the block you want to exclude.","You can exclude entire tags too."]},{"l":"Directions","p":["In the directions list, instead of specifying an explicit direction like north, you can work with the sate of the targeted block. The blockstate property has to be a directional property, like facing or axis.","This makes Seamless only search for matches in the direction that the block itself is facing.","You can use the opposite of the direction as well, north would become south and up would become down.","Instead of opposite, you can use numbers as well, for horizontal directions. The value represents the amount of clockwise rotations, north-> east-> south-> west-> north. Rotating twice would have the same effect as opposite.","Rotating and opposite do not work with axis properties."]},{"l":"Blocks","p":["If you use tags or multiple blocks in the blocks list, you may not want to make them all connect to each other, but only to their own block. In the connecting_blockstates list, you can do exactly that.","For example, I want to make all wool blocks connect to each other, but only to their own color. I could make 16 files for every color, but this is much easier."]},{"l":"Blockstates","p":["Just like with connecting_blocks, you can use /same in the connecting_blockstates object too. The outlines will only connect if the state is the same, or not the same, with /!same. In the example below, facing has to be the same and part has to be different.","If a blockstate property returns a direction or number, like facing or age, you can add things after a \"+\" just like in the directions list."]}],[{"l":"Examples","p":["Some examples for reference"]},{"l":"Beds","p":["Let's take a look at how you would create an outline rule for beds.","A bed has the parts foot and head. Both parts face the same direction. So, for the foot we need to connect to where it's facing, and for the head in the opposite direction.","Because we use a tag in blocks, beds from other mods would automatically work too, provided that the mod developer has added their beds to the tag."]},{"l":"Chests","p":["If a chest is large, it has the types left and right. Both blocks face in the same direction. If a left chest faces north, the right chest would be to the east, so rotating clockwise once. The Ender Chest is included in the tag but does not have a double variant, so we should exclude it.","For right chests facing north, the left one would be in the west direction, so three clockwise rotations."]}],[{"l":"Overriding","p":["It is very simple to override any built-in outline rule. You just have to create a file with the same name and in the same folders as the file you want to override and put your resource pack above the built-in one.","You can view the files of the built-in resource pack on GitHub."]}],[{"l":"Done","p":["If you did everything correctly, your files should show up in the logs when starting Minecraft or reloading with F3+T.","If the rules don't work, your logs should contain error messages describing what went wrong and where. Good luck!","If you end up making a pack, please let us know! We could include it in the mod :)"]}],[{"l":"Separated Leaves","p":["Configure your own trees by creating a simple data pack for Separated Leaves!"]}],[{"l":"Creating a pack","p":["To add custom leaves to the mod, first create an empty data pack (or use your own mod's resources).","In the data folder, create a folder with the name of the mod ID of the mod you are adding support for. In there, add a folder named separated_leaves. We will add the JSON files in there.","For instance, the folder structure for atmospheric:morado_leaves would be data/atmospheric/separated_leaves/....","Don't know what the mod ID is? Look at the text before the \":\" when hovering over the Leaves block with Advanced Tooltips enabled."]}],[{"l":"Files","p":["In the folder, add a JSON file for every tree type you want to support. You can name these whatever you want, but the name of the tree would make sense. So our file could be named morado.json.","The file exists of two parts. The leaves list and the logs list. Inside the leaves list, add all Leaves that can connect to each other. In the logs list, add all Logs that all leaves from the leaves list can connect to.","The lists accept both Blocks and Block Tags. You can even use both in the same list. Almost every mod has got tags for their log variants, but if such a tag does not exist, you can put the separate logs in the list yourself. As well as the default log, it should contain the stripped, wood and stripped wood variants of the log.","It is important to make separate files for every tree, not every wood type. Oak and Azalea leaves can both connect to Oak Logs, but for the best experience, they should not be able to connect to the wood through each other. Thus they should be split into two files."]}],[{"i":"biomes--structures","l":"Biomes & Structures"},{"l":"Biomes","p":["In order to not destroy any trees in custom biomes, Separated Leaves does not separate leaves in unknown biomes. Separated Leaves only works in biomes using a namespace that have registered at least one rule. This means that if a mod only adds biomes with existing trees, the biomes won't get recognized by Separated Leaves as there are no rules regarding custom trees. To fix this, add an empty rule.","This way, all leaves in custom biomes of the namespace will work correctly","For every namespace you add files for, you need to provide a biomes.json file alongside the other files. In there, you can specify which biomes should be added to the mod.","If all is set to true, Separated Leaves will work in any biome with the namespace.","If you need to specify certain biomes, set all to false and use the biomes list.","In version 2.5.0, a biome.json file is required for the mod to work."]},{"l":"Structures","p":["The structure tag is available since version 2.3.0","Structures with custom trees may break when using the mod. If this is the case for a certain structure, add it to the tag data/separated_leaves/tags/worldgen/structure/allow_mismatched_leaves.json."]}],[{"l":"Done","p":["That should be it! If you did it properly, your game logs will include your files when entering a world or running /reload.","You can also use Unilock's Python script to generate your files!"]}]]